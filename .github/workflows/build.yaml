name: Build

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: unit tests
        run: ./gradlew test
  #  android-test:
  #    runs-on: macos-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - name: Instrumentation Tests
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: 29
  #          script: ./gradlew connectedAndroidTest

  build:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      #      - name: check lint
      #        if: always()
      #        run: ./gradlew lint
      - name: Generate Release APK
        run: ./gradlew bundleRelease

      - name: Sign an APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          # 4
      - uses: actions/upload-artifact@master
        with:
          name: release.apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
        # 5
      - uses: actions/upload-artifact@master
        with:
          name: mapping.txt
          path: app/build/outputs/mapping/release/mapping.txt

    #      - name: Build with Gradle
    #        run: ./gradlew build
  deploy-firebase:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: release.apk
      - name: Upload artifact to firebase distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: SIT Testers
          file: app-release-unsigned-signed.apk