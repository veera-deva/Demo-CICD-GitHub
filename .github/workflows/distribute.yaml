name: distribute

on:
  push:
    branches: [ dev ]

jobs:
  distribute:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.5'

      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os}}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-Keys: |
            ${{ runner.os }}-gems-

      - name: cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}
      - name: cache gradle wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Grant Permission to Execute
        run: chmod +x gradlew

      - name: Install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: configure keystore
        run: |
          echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
          base64 -d -i keystore.jks.b64 > app/keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.SIGNING_KEY}}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ALIAS}}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD}}
          $KEYSTORE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}
      - name: Create firebase credential file
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > firebase_credentials.json
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
      - name: Distribute app with firebase app distribution
        run: bundle exec fastlane distribute
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}