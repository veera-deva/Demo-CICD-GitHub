name: Build and distribute

#on:
#  push:
#    branches: [ "dev" ]
#  pull_request:
#    branches: [ "dev" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: unit tests
        run: ./gradlew test
  #  android-test:
  #    runs-on: macos-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - name: Instrumentation Tests
  #        uses: reactivecircus/android-emulator-runner@v2
  #        with:
  #          api-level: 29
  #          script: ./gradlew connectedAndroidTest

  build:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      #      - name: check lint
      #        if: always()
      #        run: ./gradlew lint

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Generate Release APK
        run: ./gradlew assembleRelease

      - name: Upload artifact to firebase distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS}}
          groups: sit-testers
          releaseNotesFile: whatsnew/releaseNotes.txt
          file: app/build/outputs/apk/release/app-release-unsigned.apk

